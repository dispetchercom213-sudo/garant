import React from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { useAuthStore } from '../stores/authStore';
import { Box, CircularProgress } from '@mui/material';

interface ProtectedRouteProps {
  children: React.ReactNode;
  requiredRoles?: string[];
}

export const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ 
  children, 
  requiredRoles = [] 
}) => {
  const { isAuthenticated, user, isLoading } = useAuthStore();
  const location = useLocation();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –∏–∑ localStorage
  const token = localStorage.getItem('token');
  const userStr = localStorage.getItem('user');
  
  console.log('üîí ProtectedRoute –ø—Ä–æ–≤–µ—Ä–∫–∞:', {
    token: token ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
    userStr: userStr ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
    isAuthenticated,
    user: user ? `${user.username} (${user.role})` : '–Ω–µ—Ç',
    isLoading,
    path: location.pathname
  });
  
  // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage - —Å—Ä–∞–∑—É —Ä–µ–¥–∏—Ä–µ–∫—Ç
  if (!token || !userStr) {
    console.log('‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω');
    return <Navigate to="/login" state={{ from: location }} replace />;
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, –Ω–æ store –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (isLoading) {
    return (
      <Box 
        display="flex" 
        justifyContent="center" 
        alignItems="center" 
        minHeight="100vh"
      >
        <CircularProgress />
      </Box>
    );
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, –Ω–æ store –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
  if (token && userStr && (!isAuthenticated || !user)) {
    try {
      JSON.parse(userStr); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å JSON
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ localStorage –≤–∞–ª–∏–¥–Ω—ã–π, –Ω–æ store –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω
      // –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      return <>{children}</>;
    } catch (error) {
      // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –æ—á–∏—â–∞–µ–º –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      return <Navigate to="/login" state={{ from: location }} replace />;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
  if (requiredRoles.length > 0 && user && !requiredRoles.includes(user.role)) {
    return <Navigate to="/unauthorized" replace />;
  }

  return <>{children}</>;
};